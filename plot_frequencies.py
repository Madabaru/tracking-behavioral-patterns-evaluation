import matplotlib.pyplot as plt
import numpy as np

plt.style.use('ggplot')
BAR_WIDTH = 0.1

# Browsing
d_browsing = {500: 91211, 293: 3, 16: 32, 17: 21, 15: 25, 67: 9, 24: 15, 58: 8, 55: 17, 41: 18, 39: 12, 137: 3, 100: 4, 216: 3, 106: 6, 372: 2, 180: 3, 28: 19, 434: 1, 232: 2, 49: 17, 96: 3, 20: 18, 48: 8, 53: 9, 95: 7, 102: 5, 23: 26, 25: 21, 44: 12, 76: 9, 109: 5, 10: 40, 73: 11, 33: 9, 239: 2, 18: 20, 38: 9, 45: 11, 66: 9, 256: 2, 52: 10, 37: 11, 83: 3, 259: 2, 30: 16, 21: 29, 14: 39, 50: 8, 69: 12, 11: 42, 93: 2, 192: 1, 176: 1, 56: 9, 62: 8, 60: 4, 152: 2, 257: 2, 82: 4, 40: 15, 34: 14, 87: 7, 35: 11, 12: 44, 70: 12, 27: 24, 117: 5, 197: 6, 107: 2, 29: 14, 19: 29, 115: 8, 79: 6, 131: 2, 64: 7, 77: 8, 101: 9, 359: 1, 57: 13, 81: 7, 138: 3, 59: 7, 22: 24, 177: 4, 43: 14, 208: 1, 261: 1, 433: 2, 89: 9, 32: 17, 42: 11, 31: 12, 104: 4, 254: 1, 171: 3, 51: 14, 103: 2, 91: 6, 132: 3, 140: 6, 314: 1, 36: 23, 47: 10, 155: 4, 162: 2, 174: 2, 13: 29, 26: 9, 151: 4, 111: 4, 98: 4, 173: 2, 129: 3, 71: 6, 46: 13, 122: 5, 367: 2, 249: 2, 222: 3, 170: 2, 445: 2, 65: 12, 94: 3, 142: 4, 183: 4, 194: 3, 366: 1, 144: 2, 203: 2, 228: 2, 127: 1, 118: 3, 63: 5, 85: 3, 462: 1, 54: 9, 164: 1, 145: 3, 237: 1, 97: 3, 430: 2, 325: 2, 277: 1, 255: 2, 384: 1, 265: 1, 306: 1, 72: 5, 125: 3, 235: 5, 141: 5, 447: 1, 465: 1, 201: 3, 114: 4, 165: 1, 497: 1, 207: 2, 75: 7, 92: 4, 210: 4, 143: 1, 184: 2, 158: 3, 429: 2, 448: 1, 296: 1, 260: 1, 148: 2, 258: 2, 206: 2, 317: 1, 153: 1, 457: 1, 167: 4, 105: 2, 218: 3, 121: 4, 113: 2, 126: 4, 213: 2, 80: 4, 110: 5, 250: 2, 312: 1, 156: 5, 280: 1, 187: 1, 99: 3, 61: 7, 211: 1, 408: 1, 288: 1, 196: 1, 191: 1, 128: 2, 247: 2, 154: 4, 284: 1, 300: 2, 157: 4, 318: 1, 297: 1, 119: 4, 229: 2, 370: 2, 418: 1, 175: 3, 159: 3, 68: 9, 147: 2, 135: 4, 298: 2, 474: 1, 149: 2, 160: 3, 136: 1, 84: 9, 253: 1, 163: 1, 86: 6, 376: 1, 88: 2, 291: 1, 274: 1, 432: 1, 134: 2, 74: 6, 286: 2, 172: 2, 276: 1, 204: 1, 205: 1, 273: 1, 199: 3, 234: 2, 278: 1, 169: 1, 381: 2, 450: 1, 198: 1, 323: 1, 455: 1, 161: 3, 494: 1, 150: 3, 231: 2, 407: 1, 217: 1, 290: 1, 90: 3, 200: 1, 209: 1, 313: 1, 202: 1, 179: 2, 267: 1, 146: 1, 269: 2, 270: 1, 421: 1, 437: 1, 279: 1, 263: 2, 123: 2, 349: 1, 301: 1, 212: 1, 417: 1, 488: 1, 275: 1, 252: 1, 299: 1, 78: 2, 188: 2, 346: 1, 425: 1, 251: 1, 469: 1, 108: 1, 489: 2, 481: 1, 285: 1, 272: 2, 413: 1, 440: 1, 186: 1, 130: 1, 281: 1, 224: 1, 294: 1, 193: 1, 178: 1, 133: 1, 405: 1, 336: 1, 166: 1, 444: 1, 168: 1, 379: 1, 479: 1, 116: 1, 238: 1, 391: 1, 243: 1, 236: 1}
# Mobility
d_mobility = {500: 38666, 64: 332, 340: 144, 299: 158, 143: 282, 491: 90, 131: 302, 204: 231, 109: 340, 163: 254, 150: 259, 182: 279, 368: 151, 149: 284, 406: 118, 156: 235, 107: 293, 116: 282, 401: 139, 185: 245, 232: 204, 251: 189, 158: 243, 342: 133, 151: 262, 56: 297, 483: 89, 172: 250, 267: 169, 96: 315, 209: 251, 50: 283, 144: 266, 134: 298, 314: 155, 82: 333, 84: 304, 187: 247, 394: 104, 85: 327, 250: 196, 104: 324, 321: 132, 88: 333, 194: 245, 141: 310, 29: 264, 183: 259, 67: 307, 154: 277, 216: 249, 392: 118, 132: 294, 438: 117, 62: 324, 125: 311, 153: 244, 148: 295, 360: 147, 488: 106, 106: 315, 432: 113, 279: 145, 162: 245, 61: 323, 174: 273, 27: 281, 341: 155, 100: 288, 44: 293, 215: 226, 76: 321, 66: 316, 142: 294, 97: 341, 175: 264, 160: 252, 138: 293, 120: 291, 11: 270, 94: 288, 46: 314, 178: 285, 186: 265, 181: 242, 41: 260, 366: 135, 115: 289, 302: 143, 361: 122, 422: 113, 481: 102, 257: 193, 455: 122, 24: 239, 457: 98, 282: 175, 424: 116, 350: 157, 371: 132, 123: 307, 437: 91, 375: 137, 396: 113, 487: 96, 40: 278, 146: 281, 449: 98, 408: 124, 316: 156, 283: 178, 42: 286, 312: 140, 298: 169, 344: 140, 409: 125, 466: 103, 485: 115, 433: 95, 117: 289, 256: 181, 136: 269, 22: 277, 15: 289, 25: 255, 89: 322, 75: 304, 226: 238, 246: 178, 231: 207, 105: 308, 268: 179, 53: 275, 479: 94, 353: 155, 16: 304, 112: 297, 413: 103, 429: 134, 332: 153, 171: 256, 338: 142, 400: 140, 196: 252, 55: 285, 198: 260, 230: 228, 180: 267, 73: 297, 90: 302, 184: 274, 17: 313, 274: 166, 373: 130, 223: 210, 240: 201, 49: 308, 140: 292, 304: 154, 87: 319, 39: 251, 114: 276, 13: 309, 45: 298, 310: 138, 448: 104, 293: 132, 262: 169, 393: 122, 108: 307, 212: 250, 235: 209, 294: 181, 290: 171, 52: 296, 179: 245, 244: 195, 450: 124, 454: 99, 261: 183, 335: 138, 195: 262, 57: 326, 21: 278, 199: 233, 306: 148, 167: 262, 38: 246, 275: 172, 378: 133, 365: 140, 493: 99, 99: 333, 330: 168, 343: 130, 436: 115, 386: 123, 278: 166, 263: 169, 30: 246, 452: 104, 95: 307, 200: 255, 333: 152, 497: 90, 495: 84, 176: 251, 352: 153, 122: 284, 201: 230, 443: 88, 458: 97, 351: 163, 442: 102, 229: 225, 354: 146, 247: 209, 211: 265, 254: 195, 356: 181, 489: 117, 128: 271, 425: 110, 78: 293, 236: 220, 214: 260, 470: 79, 33: 292, 462: 80, 473: 110, 265: 161, 74: 292, 486: 80, 461: 100, 168: 270, 79: 330, 189: 247, 165: 280, 355: 130, 124: 276, 474: 96, 414: 126, 159: 254, 249: 185, 34: 306, 202: 220, 193: 234, 266: 165, 415: 127, 305: 164, 430: 123, 137: 264, 18: 312, 307: 134, 14: 286, 121: 293, 324: 137, 297: 134, 26: 272, 345: 151, 102: 289, 111: 261, 465: 110, 372: 143, 135: 281, 210: 240, 118: 302, 161: 266, 322: 149, 19: 346, 166: 280, 101: 282, 47: 292, 329: 157, 145: 269, 188: 255, 177: 256, 192: 264, 221: 207, 242: 213, 191: 252, 245: 194, 476: 96, 80: 325, 127: 279, 139: 316, 28: 253, 43: 320, 133: 265, 241: 189, 31: 273, 439: 100, 441: 102, 69: 309, 23: 285, 208: 219, 383: 119, 323: 143, 60: 319, 81: 309, 48: 337, 110: 279, 173: 283, 170: 254, 325: 140, 219: 242, 37: 271, 286: 154, 130: 278, 421: 101, 313: 156, 391: 136, 255: 202, 190: 232, 220: 238, 243: 225, 399: 112, 86: 258, 54: 290, 98: 277, 357: 141, 492: 81, 367: 122, 32: 314, 71: 304, 472: 99, 63: 338, 164: 232, 451: 112, 205: 250, 233: 187, 369: 154, 252: 192, 359: 127, 277: 173, 403: 141, 374: 119, 434: 100, 258: 200, 463: 90, 364: 136, 296: 163, 269: 180, 264: 169, 456: 119, 91: 327, 301: 151, 291: 167, 407: 116, 284: 137, 281: 152, 311: 147, 428: 116, 92: 313, 58: 326, 423: 106, 398: 106, 444: 110, 328: 143, 499: 90, 129: 269, 420: 112, 475: 105, 389: 144, 225: 184, 239: 194, 222: 233, 72: 322, 155: 261, 377: 138, 334: 145, 10: 331, 453: 96, 113: 290, 126: 277, 490: 94, 300: 142, 237: 199, 206: 254, 119: 308, 427: 116, 317: 140, 59: 318, 234: 213, 93: 309, 347: 159, 376: 113, 468: 112, 410: 149, 207: 240, 253: 209, 346: 135, 337: 138, 319: 144, 459: 101, 417: 112, 70: 317, 152: 270, 65: 318, 218: 202, 68: 270, 169: 244, 411: 131, 381: 137, 228: 230, 224: 239, 384: 120, 402: 127, 348: 137, 77: 315, 494: 92, 20: 286, 318: 153, 12: 280, 157: 288, 382: 123, 385: 127, 496: 96, 83: 274, 471: 102, 213: 245, 498: 91, 464: 92, 276: 199, 217: 253, 197: 275, 435: 115, 35: 281, 309: 163, 477: 114, 273: 173, 289: 165, 238: 211, 36: 258, 270: 157, 320: 162, 51: 331, 287: 172, 362: 135, 336: 142, 103: 322, 484: 83, 446: 104, 280: 152, 260: 169, 288: 135, 478: 109, 326: 130, 331: 164, 203: 221, 397: 117, 147: 292, 412: 132, 431: 109, 271: 179, 227: 226, 416: 111, 315: 150, 292: 165, 445: 108, 358: 141, 308: 141, 259: 189, 349: 148, 426: 114, 387: 147, 482: 100, 327: 150, 285: 150, 469: 107, 295: 160, 379: 135, 363: 149, 447: 103, 395: 111, 370: 152, 388: 123, 419: 116, 390: 104, 440: 111, 248: 203, 405: 115, 480: 91, 339: 151, 303: 170, 272: 179, 404: 127, 467: 102, 460: 100, 380: 138, 418: 116}
l_browsing = [key for key, val in d_browsing.items() for _ in range(val)]
l_mobility = [key for key, val in d_mobility.items() for _ in range(val)]


# Browsing
# d1 = {19: 623955, 20: 606609, 17: 600047, 18: 585203, 16: 566223, 21: 553885, 14: 553106, 15: 549502, 13: 534007, 11: 527413, 12: 522644, 10: 511652, 22: 467451, 9: 438058, 23: 333569, 8: 305452, 0: 201290, 7: 187840, 1: 118488, 6: 117546, 2: 76430, 5: 64340, 3: 55447, 4: 51086}
# d1 = {0: 1552689, 2: 1534642, 1: 1512377, 3: 1196929, 6: 1190662, 4: 1115449, 5: 1048495}
# d1 = {14: 483520, 13: 435832, 15: 418095, 6: 416807, 8: 408204, 12: 383323, 7: 377760, 10: 368789, 9: 360578, 5: 360122, 11: 346696, 16: 327231, 4: 243980, 17: 242331, 3: 164992, 18: 151683, 2: 106075, 19: 99984, 20: 74464, 1: 74111, 0: 71237, 21: 50242, 22: 35769, 23: 26856}

# Mobility
# d2 = {14: 3166259, 13: 3061471, 15: 2919591, 12: 2834270, 9: 2598374, 11: 2590756, 8: 2587394, 10: 2578423, 16: 2493537, 7: 2266748, 6: 2104388, 17: 1840953, 5: 1730577, 18: 1236280, 4: 1099554, 19: 864812, 20: 660435, 3: 640577, 21: 495274, 22: 378461, 2: 375811, 23: 305560, 1: 271219, 0: 265006}
# d2 = {4: 6720256, 3: 6629200, 0: 6028681, 1: 5652039, 2: 5599039, 5: 4576897, 6: 4159618}
# d2 = {14: 456986, 13: 424783, 15: 418292, 12: 401429, 6: 392195, 7: 390171, 8: 380754, 9: 364425, 11: 359362, 16: 344993, 10: 342748, 5: 324127, 17: 250570, 4: 183055, 18: 141901, 19: 100677, 3: 88644, 20: 69926, 21: 51526, 2: 43456, 22: 40469, 23: 32364, 1: 27816, 0: 21370}
# d2 = {14: 467418, 13: 436025, 15: 420366, 12: 413938, 8: 364081, 16: 361262, 11: 351426, 9: 348332, 6: 338389, 7: 332747, 10: 332675, 5: 286934, 17: 256685, 4: 193472, 18: 165797, 19: 112228, 3: 88030, 20: 86643, 21: 56216, 2: 51750, 22: 41710, 23: 33199, 1: 30423, 0: 29293}
# d3 = {15: 366881, 13: 352628, 12: 348574, 14: 347200, 11: 334134, 16: 321417, 10: 313483, 9: 296674, 8: 242231, 17: 237603, 18: 172347, 7: 151148, 19: 113968, 20: 82497, 6: 82308, 21: 71841, 23: 62262, 22: 52971, 5: 48827, 4: 36606, 0: 34149, 3: 33584, 1: 28180, 2: 28105}
# d4 = {9: 379418, 10: 361140, 8: 349155, 12: 333712, 13: 329384, 14: 326510, 11: 325236, 15: 305046, 16: 288023, 7: 251572, 17: 218342, 18: 157202, 6: 151692, 19: 117558, 20: 100500, 5: 95372, 21: 84603, 4: 82257, 22: 66549, 3: 64220, 1: 48512, 23: 47828, 2: 46865, 0: 46201}

# d1 = dict(sorted(d1.items()))
# d2 = dict(sorted(d2.items()))
# d3 = dict(sorted(d3.items()))
# d4 = dict(sorted(d4.items()))

# k1 = list(d1.keys())
# k2 = list(d2.keys())
# k3 = list(d3.keys())
# k4 = list(d4.keys())
# v1 = list(d1.values())
# v1 = [i/sum(v1) for i in v1]
# v2 = list(d2.values())
# v2 = [i/sum(v2) for i in v2]
# v3 = list(d3.values())
# v3 = [i/sum(v3) for i in v3]
# v4 = list(d4.values())
# v4 = [i/sum(v4) for i in v4]

fig, (ax1, ax2) = plt.subplots(1, 2, sharey=True, figsize=(8,4))
# fig.suptitle("Weekday Distribution", fontsize=14)

ax1.patch.set_facecolor('#e0e0e0')
# ax1.bar(np.arange(len(k1)), v1, color="#3f51b5")
ax1.hist(l_browsing, bins=10, color="#3f51b5")
ax1.set(xlabel="Trace Length")
ax1.set_title("Browsing Dataset", fontsize=12)
# ax1.set_xticks([r + BAR_WIDTH for r in range(len(np.arange(len(k1))))])
# ax1.set_xticklabels(k1, rotation=90)
ax1.set(ylabel='Frequency')

ax2.patch.set_facecolor('#e0e0e0')
ax2.hist(l_mobility, bins=10, color="#3f51b5")
ax2.set(xlabel="Trace Length")
ax2.set_title("Mobility Dataset", fontsize=12)
# ax2.set_xticks([r + BAR_WIDTH for r in range(len(np.arange(len(k2))))])
# ax2.set_xticklabels(k2, rotation=90)

# ax3.patch.set_facecolor('#e0e0e0')
# ax3.bar(np.arange(len(k3)), v3, color="#3f51b5")
# ax3.set(xlabel="Hour")
# ax3.set_title("Mobility Dataset: Saturday", fontsize=12)
# ax3.set_xticks([r + BAR_WIDTH for r in range(len(np.arange(len(k3))))])
# ax3.set_xticklabels(k2, rotation=90)

# ax4.patch.set_facecolor('#e0e0e0')
# ax4.bar(np.arange(len(k4)), v4, color="#3f51b5")
# ax4.set(xlabel="Hour")
# ax4.set_title("Mobility Dataset: Sunday", fontsize=12)
# ax4.set_xticks([r + BAR_WIDTH for r in range(len(np.arange(len(k4))))])
# ax4.set_xticklabels(k2, rotation=90)



plt.yticks([0, 20000, 40000, 60000, 80000, 100000])


plt.tight_layout()
# plt.show()

plt.savefig(f"images/trace_length_distribution.pdf", format="pdf")